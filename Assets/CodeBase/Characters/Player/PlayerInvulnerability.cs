using System;
using System.Collections;
using Mirror;
using UnityEngine;

namespace CodeBase.Characters.Player
{
    public class PlayerInvulnerability : NetworkBehaviour
    {
        public Action OnAttacked;
        public Action OnNormalized;
        
        private bool _isInvincible;
        private float _invicibleTime;

        public void LoadData(float invicibleTime) => 
            _invicibleTime = invicibleTime;

        public bool TryAttackThisPlayer()
        {
            if (isServer == false)
                throw new Exception("Can't attack player on client only");
            
            if (_isInvincible)
                return false;

            StartCoroutine(SetInvincible());
            return true;
        }

        private IEnumerator SetInvincible()
        {
            _isInvincible = true;
            OnAttacked?.Invoke();
            yield return new WaitForSeconds(_invicibleTime);
            _isInvincible = false;
            OnNormalized?.Invoke();
        }
    }
}